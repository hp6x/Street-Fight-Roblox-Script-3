do local Rayfield=loadstring(game:HttpGet("https://sirius.menu/rayfield"))();local Window=Rayfield:CreateWindow({Name="Street Fight Script by hp6x",LoadingTitle="Street Fight Script by hp6x",LoadingSubtitle="v1.2",ConfigurationSaving={Enabled=true,FolderName=nil,FileName="hp6x_sf"},Discord={Enabled=true,Invite="https://discord.gg/Q6hXrGZd2M",RememberJoins=false}});local MainTab=Window:CreateTab("Main",4483362458);local VisualsTab=Window:CreateTab("Visuals",4483362458);local FarmTab=Window:CreateTab("Farming",4483362458);local MiscTab=Window:CreateTab("Misc",4483362458);local MainSection=MainTab:CreateSection("");local VisualsSection=VisualsTab:CreateSection("");local FarmSection=FarmTab:CreateSection("");local MiscSection=MiscTab:CreateSection("");local Players=game:GetService("Players");local RunService=game:GetService("RunService");local UserInput=game:GetService("UserInputService");local CAS=game:GetService("ContextActionService");local LP=Players.LocalPlayer;getgenv().DesiredWalkSpeed=((typeof(getgenv().DesiredWalkSpeed)=="number") and getgenv().DesiredWalkSpeed) or 20 ;getgenv().DesiredJumpPower=((typeof(getgenv().DesiredJumpPower)=="number") and getgenv().DesiredJumpPower) or 50 ;local function safeDisconnect(conn) pcall(function() if conn then conn:Disconnect();end end);end local function clearList(lst) if lst then for _,c in ipairs(lst) do safeDisconnect(c);end end end getgenv()._hp6x=getgenv()._hp6x or {locks={},hb=nil,rs=nil,shiftEat=nil} ;local function getHumanoid() local char=LP.Character;if  not char then return nil;end return char:FindFirstChildOfClass("Humanoid");end local function forceApply(h) if  not h then return;end if (h.UseJumpPower~=nil) then pcall(function() h.UseJumpPower=true;end);end h.WalkSpeed=getgenv().DesiredWalkSpeed;h.JumpPower=getgenv().DesiredJumpPower;end local function protectHumanoid(h) if  not h then return;end clearList(getgenv()._hp6x.locks);getgenv()._hp6x.locks={};forceApply(h);task.delay(0.15,function() if h.Parent then forceApply(h);end end);table.insert(getgenv()._hp6x.locks,h:GetPropertyChangedSignal("WalkSpeed"):Connect(function() if (h.WalkSpeed~=getgenv().DesiredWalkSpeed) then h.WalkSpeed=getgenv().DesiredWalkSpeed;end end));table.insert(getgenv()._hp6x.locks,h:GetPropertyChangedSignal("JumpPower"):Connect(function() if ((h.UseJumpPower~=nil) and (h.UseJumpPower~=true)) then h.UseJumpPower=true;end if (h.JumpPower~=getgenv().DesiredJumpPower) then h.JumpPower=getgenv().DesiredJumpPower;end end));safeDisconnect(getgenv()._hp6x.hb);getgenv()._hp6x.hb=RunService.Heartbeat:Connect(function() if ( not h or (h.Parent==nil)) then return;end if (h.WalkSpeed~=getgenv().DesiredWalkSpeed) then h.WalkSpeed=getgenv().DesiredWalkSpeed;end if ((h.UseJumpPower~=nil) and (h.UseJumpPower~=true)) then h.UseJumpPower=true;end if (h.JumpPower~=getgenv().DesiredJumpPower) then h.JumpPower=getgenv().DesiredJumpPower;end end);table.insert(getgenv()._hp6x.locks,h.AncestryChanged:Connect(function(_,parent) if  not parent then return;end task.defer(function() local nh=getHumanoid();if (nh and (nh~=h)) then protectHumanoid(nh);end end);end));end local function setupChar(char) local h=char:WaitForChild("Humanoid",10);if h then protectHumanoid(h);end end if LP.Character then setupChar(LP.Character);end safeDisconnect(getgenv()._hp6x.charAdded);getgenv()._hp6x.charAdded=LP.CharacterAdded:Connect(setupChar);safeDisconnect(getgenv()._hp6x.shiftEat);getgenv()._hp6x.shiftEat=UserInput.InputBegan:Connect(function(input,gpe) if ((input.KeyCode==Enum.KeyCode.LeftShift) or (input.KeyCode==Enum.KeyCode.RightShift)) then task.defer(function() forceApply(getHumanoid());end);end end);UserInput.InputEnded:Connect(function(input,gpe) if ((input.KeyCode==Enum.KeyCode.LeftShift) or (input.KeyCode==Enum.KeyCode.RightShift)) then task.defer(function() forceApply(getHumanoid());end);end end);getgenv().HitboxSize=getgenv().HitboxSize or 12 ;getgenv().HitboxTransparency=getgenv().HitboxTransparency or 0.5 ;getgenv().HitboxConnections=getgenv().HitboxConnections or {} ;getgenv().HitboxPlayerConnection=getgenv().HitboxPlayerConnection or nil ;getgenv().HitboxPlayerRemovingConnection=getgenv().HitboxPlayerRemovingConnection or nil ;getgenv().OriginalHeadProperties=getgenv().OriginalHeadProperties or {} ;local function expandHeadHitbox(player) if (player==Players.LocalPlayer) then return;end local function setupHitbox(character) local head=character:WaitForChild("Head",5);if  not head then return;end if  not getgenv().OriginalHeadProperties[player] then getgenv().OriginalHeadProperties[player]={size=head.Size,transparency=head.Transparency,canCollide=head.CanCollide,massless=head.Massless};end head.Size=Vector3.new(getgenv().HitboxSize,getgenv().HitboxSize,getgenv().HitboxSize);head.Transparency=getgenv().HitboxTransparency;head.CanCollide=false;head.Massless=true;end if player.Character then setupHitbox(player.Character);end local connection=player.CharacterAdded:Connect(setupHitbox);getgenv().HitboxConnections[player]=connection;end local function restoreHead(player) if player.Character then local head=player.Character:FindFirstChild("Head");if (head and getgenv().OriginalHeadProperties[player]) then local props=getgenv().OriginalHeadProperties[player];head.Size=props.size;head.Transparency=props.transparency;head.CanCollide=props.canCollide;head.Massless=props.massless;end end end local function clearHitboxExpansion() for player,connection in pairs(getgenv().HitboxConnections) do if connection then connection:Disconnect();end restoreHead(player);end getgenv().HitboxConnections={};getgenv().OriginalHeadProperties={};end local function updateHitboxes() for player,_ in pairs(getgenv().HitboxConnections) do if player.Character then local head=player.Character:FindFirstChild("Head");if head then head.Size=Vector3.new(getgenv().HitboxSize,getgenv().HitboxSize,getgenv().HitboxSize);head.Transparency=getgenv().HitboxTransparency;head.CanCollide=false;head.Massless=true;end end end end local HitboxToggle=VisualsTab:CreateToggle({Name="Head Hitbox Expander",CurrentValue=false,Flag="HitboxToggle",Callback=function(Value) if Value then for _,player in pairs(Players:GetPlayers()) do expandHeadHitbox(player);end getgenv().HitboxPlayerConnection=Players.PlayerAdded:Connect(expandHeadHitbox);getgenv().HitboxPlayerRemovingConnection=Players.PlayerRemoving:Connect(function(player) if getgenv().HitboxConnections[player] then getgenv().HitboxConnections[player]:Disconnect();getgenv().HitboxConnections[player]=nil;end restoreHead(player);getgenv().OriginalHeadProperties[player]=nil;end);else if getgenv().HitboxPlayerConnection then getgenv().HitboxPlayerConnection:Disconnect();getgenv().HitboxPlayerConnection=nil;end if getgenv().HitboxPlayerRemovingConnection then getgenv().HitboxPlayerRemovingConnection:Disconnect();getgenv().HitboxPlayerRemovingConnection=nil;end clearHitboxExpansion();end end});local HitboxSizeSlider=VisualsTab:CreateSlider({Name="Size",Range={2,70},Increment=1,CurrentValue=getgenv().HitboxSize,Flag="HitboxSize",Callback=function(Value) getgenv().HitboxSize=Value;updateHitboxes();end});local HitboxTransparencySlider=VisualsTab:CreateSlider({Name="Transparency",Range={0,1},Increment=0.1,CurrentValue=getgenv().HitboxTransparency,Flag="HitboxTransparency",Callback=function(Value) getgenv().HitboxTransparency=Value;updateHitboxes();end});local SpeedSlider=MainTab:CreateSlider({Name="Walk Speed",Range={20,200},Increment=10,CurrentValue=getgenv().DesiredWalkSpeed,Flag="SpeedSlider",Callback=function(Value) getgenv().DesiredWalkSpeed=Value;local h=(getHumanoid and getHumanoid()) or (game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")) ;if h then h.WalkSpeed=Value;end end});local JumpSlider=MainTab:CreateSlider({Name="Jump Power",Range={50,200},Increment=10,CurrentValue=getgenv().DesiredJumpPower,Flag="JumpSlider",Callback=function(Value) getgenv().DesiredJumpPower=Value;local h=(getHumanoid and getHumanoid()) or (game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid")) ;if h then if (h.UseJumpPower~=nil) then h.UseJumpPower=true;end h.JumpPower=Value;end end});local InfiniteJumpToggle=MainTab:CreateToggle({Name="Infinite Jump",CurrentValue=false,Flag="InfiniteJump",Callback=function(Value) local Players=game:GetService("Players");local UserInputService=game:GetService("UserInputService");local player=Players.LocalPlayer;if Value then local connection;connection=UserInputService.JumpRequest:Connect(function() if (player.Character and player.Character:FindFirstChild("Humanoid")) then player.Character.Humanoid:ChangeState("Jumping");end end);getgenv().InfiniteJumpConnection=connection;elseif getgenv().InfiniteJumpConnection then getgenv().InfiniteJumpConnection:Disconnect();getgenv().InfiniteJumpConnection=nil;end end});local NoclipToggle=MainTab:CreateToggle({Name="Noclip",CurrentValue=false,Flag="NoclipToggle",Callback=function(Value) local Players=game:GetService("Players");local RunService=game:GetService("RunService");local player=Players.LocalPlayer;local character=player.Character or player.CharacterAdded:Wait() ;getgenv().OriginalCollisions=getgenv().OriginalCollisions or {} ;if Value then getgenv().OriginalCollisions={};for _,part in pairs(character:GetDescendants()) do if part:IsA("BasePart") then getgenv().OriginalCollisions[part]=part.CanCollide;end end getgenv().NoclipConnection=RunService.Stepped:Connect(function() for part,_ in pairs(getgenv().OriginalCollisions) do if (part and part:IsA("BasePart")) then part.CanCollide=false;end end end);else if getgenv().NoclipConnection then getgenv().NoclipConnection:Disconnect();getgenv().NoclipConnection=nil;end for part,originalState in pairs(getgenv().OriginalCollisions or {} ) do if (part and part:IsA("BasePart")) then part.CanCollide=originalState;end end getgenv().OriginalCollisions=nil;end end});local MoreSection=MainTab:CreateSection("Head Lock");local pcall=pcall;local getgenv=getgenv;local next=next;local Vector2=Vector2.new;local mathclamp=math.clamp;local type=type;local mousemoverel=mousemoverel or function() end ;pcall(function() getgenv().Aimbot.Functions:Exit();end);getgenv().Aimbot={};local Environment=getgenv().Aimbot;local RunService=game:GetService("RunService");local UserInputService=game:GetService("UserInputService");local TweenService=game:GetService("TweenService");local Players=game:GetService("Players");local Camera=workspace.CurrentCamera;local LocalPlayer=Players.LocalPlayer;local RequiredDistance,Running,Animation,ServiceConnections,RightMouseHeld=2000,false,nil,{},false;Environment.Settings={Enabled=false,TeamCheck=false,AliveCheck=true,WallCheck=false,Sensitivity=0.05,ThirdPerson=false,ThirdPersonSensitivity=3,LockPart="Head"};Environment.FOVSettings={Enabled=true,Visible=true,Amount=90,Color=Color3.fromRGB(255,255,255),LockedColor=Color3.fromRGB(255,70,70),Transparency=0.5,Sides=60,Thickness=1,Filled=false};Environment.FOVCircle=Drawing.new("Circle");local function CancelLock() Environment.Locked=nil;if Animation then Animation:Cancel();end Environment.FOVCircle.Color=Environment.FOVSettings.Color;end local function GetClosestPlayer() if  not Environment.Locked then RequiredDistance=(Environment.FOVSettings.Enabled and Environment.FOVSettings.Amount) or 2000 ;for _,v in next,Players:GetPlayers() do if (v~=LocalPlayer) then if (v.Character and v.Character:FindFirstChild(Environment.Settings.LockPart) and v.Character:FindFirstChildOfClass("Humanoid")) then if (Environment.Settings.TeamCheck and (v.Team==LocalPlayer.Team)) then continue;end if (Environment.Settings.AliveCheck and (v.Character:FindFirstChildOfClass("Humanoid").Health<=0)) then continue;end if (Environment.Settings.WallCheck and ( #(Camera:GetPartsObscuringTarget({v.Character[Environment.Settings.LockPart].Position},v.Character:GetDescendants()))>0)) then continue;end local Vector,OnScreen=Camera:WorldToViewportPoint(v.Character[Environment.Settings.LockPart].Position);local Distance=(Vector2(UserInputService:GetMouseLocation().X,UserInputService:GetMouseLocation().Y) -Vector2(Vector.X,Vector.Y)).Magnitude;if ((Distance<RequiredDistance) and OnScreen) then RequiredDistance=Distance;Environment.Locked=v;end end end end elseif ((Vector2(UserInputService:GetMouseLocation().X,UserInputService:GetMouseLocation().Y) -Vector2(Camera:WorldToViewportPoint(Environment.Locked.Character[Environment.Settings.LockPart].Position).X,Camera:WorldToViewportPoint(Environment.Locked.Character[Environment.Settings.LockPart].Position).Y)).Magnitude>RequiredDistance) then CancelLock();end end local function Load() ServiceConnections.InputBeganConnection=UserInputService.InputBegan:Connect(function(input,gameProcessedEvent) if (input.UserInputType==Enum.UserInputType.MouseButton2) then RightMouseHeld=true;end end);ServiceConnections.InputEndedConnection=UserInputService.InputEnded:Connect(function(input,gameProcessedEvent) if (input.UserInputType==Enum.UserInputType.MouseButton2) then RightMouseHeld=false;CancelLock();end end);ServiceConnections.RenderSteppedConnection=RunService.RenderStepped:Connect(function() if (Environment.FOVSettings.Enabled and Environment.Settings.Enabled) then Environment.FOVCircle.Radius=Environment.FOVSettings.Amount;Environment.FOVCircle.Thickness=Environment.FOVSettings.Thickness;Environment.FOVCircle.Filled=Environment.FOVSettings.Filled;Environment.FOVCircle.NumSides=Environment.FOVSettings.Sides;Environment.FOVCircle.Color=Environment.FOVSettings.Color;Environment.FOVCircle.Transparency=Environment.FOVSettings.Transparency;Environment.FOVCircle.Visible=Environment.FOVSettings.Visible;Environment.FOVCircle.Position=Vector2(UserInputService:GetMouseLocation().X,UserInputService:GetMouseLocation().Y);else Environment.FOVCircle.Visible=false;end if (Running and Environment.Settings.Enabled and RightMouseHeld) then GetClosestPlayer();if Environment.Locked then if Environment.Settings.ThirdPerson then Environment.Settings.ThirdPersonSensitivity=mathclamp(Environment.Settings.ThirdPersonSensitivity,0.1,5);local Vector=Camera:WorldToViewportPoint(Environment.Locked.Character[Environment.Settings.LockPart].Position);mousemoverel((Vector.X-UserInputService:GetMouseLocation().X) * Environment.Settings.ThirdPersonSensitivity ,(Vector.Y-UserInputService:GetMouseLocation().Y) * Environment.Settings.ThirdPersonSensitivity );elseif (Environment.Settings.Sensitivity>0) then Animation=TweenService:Create(Camera,TweenInfo.new(Environment.Settings.Sensitivity,Enum.EasingStyle.Sine,Enum.EasingDirection.Out),{CFrame=CFrame.new(Camera.CFrame.Position,Environment.Locked.Character[Environment.Settings.LockPart].Position)});Animation:Play();else Camera.CFrame=CFrame.new(Camera.CFrame.Position,Environment.Locked.Character[Environment.Settings.LockPart].Position);end Environment.FOVCircle.Color=Environment.FOVSettings.LockedColor;end end end);end Environment.Functions={};Environment.Functions.Exit=function(self) for _,v in next,ServiceConnections do v:Disconnect();end if Environment.FOVCircle.Remove then Environment.FOVCircle:Remove();end getgenv().Aimbot.Functions=nil;getgenv().Aimbot=nil;Load=nil;GetClosestPlayer=nil;CancelLock=nil;end;Environment.Functions.Restart=function(self) for _,v in next,ServiceConnections do v:Disconnect();end Load();end;Environment.Functions.ResetSettings=function(self) Environment.Settings={Enabled=false,TeamCheck=false,AliveCheck=true,WallCheck=false,Sensitivity=0.05,ThirdPerson=false,ThirdPersonSensitivity=3,LockPart="Head"};Environment.FOVSettings={Enabled=true,Visible=true,Amount=90,Color=Color3.fromRGB(255,255,255),LockedColor=Color3.fromRGB(255,70,70),Transparency=0.5,Sides=60,Thickness=1,Filled=false};end;Load();local HeadLockToggle=MainTab:CreateToggle({Name="Head Lock",CurrentValue=false,Flag="HeadLockToggle",Callback=function(Value) Running=Value;Environment.Settings.Enabled=Value;if  not Value then CancelLock();end print("Head Lock Toggle changed to:",Value);end});local FovCircleToggle=MainTab:CreateToggle({Name="FOV Circle",CurrentValue=Environment.FOVSettings.Visible,Flag="FovCircleToggle",Callback=function(Value) Environment.FOVSettings.Visible=Value;print("FOV Circle Toggle changed to:",Value);end});local FovSizeSlider=MainTab:CreateSlider({Name="FOV Size",Range={10,100},Increment=5,Suffix="px",CurrentValue=Environment.FOVSettings.Amount,Flag="FovSizeSlider",Callback=function(Value) Environment.FOVSettings.Amount=Value;print("FOV Size Slider changed to:",Value);end});local MoreSection=MainTab:CreateSection("Teleports");local Players=game:GetService("Players");local LocalPlayer=Players.LocalPlayer;local Character=LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait() ;local HumanoidRootPart=Character:WaitForChild("HumanoidRootPart",5);local previousPosition=nil;local Button2=MainTab:CreateButton({Name="Street Spawn",Callback=function() if ( not Character or  not HumanoidRootPart) then warn("Character or HumanoidRootPart not found!");return;end previousPosition=HumanoidRootPart.CFrame;local success,streetSpawn=pcall(function() return workspace.Others.FallZone;end);if (success and streetSpawn) then HumanoidRootPart.CFrame=streetSpawn.CFrame + Vector3.new(0,5,0) ;print("Successfully teleported to Street Spawn");else warn("Street Spawn not found at workspace.Others.FallZone!");end end});local HealthPadKeybind=MainTab:CreateKeybind({Name="Health Pad",CurrentKeybind="C",HoldToInteract=false,Flag="HealthPadKeybind",Callback=function(isHeld) if  not isHeld then if ( not Character or  not HumanoidRootPart) then warn("Character or HumanoidRootPart not found!");return;end previousPosition=HumanoidRootPart.CFrame;local success,healthPad=pcall(function() return workspace.Pads.Health["11"].Model.Trigger;end);if (success and healthPad) then HumanoidRootPart.CFrame=healthPad.CFrame + Vector3.new(0,5,0) ;print("Successfully teleported to Health Pad via keybind");else warn("Health Pad not found at workspace.Pads.Health['11'].Model.Trigger!");end end end});local PreviousPositionKeybind=MainTab:CreateKeybind({Name="Previous Position",CurrentKeybind="F",HoldToInteract=false,Flag="PreviousPositionKeybind",Callback=function(isHeld) if  not isHeld then if ( not Character or  not HumanoidRootPart) then warn("Character or HumanoidRootPart not found!");return;end if previousPosition then HumanoidRootPart.CFrame=previousPosition;print("Returned to previous position via keybind");else warn("No previous position saved! Use Health Pad or Street Spawn first.");end end end});LocalPlayer.CharacterAdded:Connect(function(newCharacter) Character=newCharacter;HumanoidRootPart=newCharacter:WaitForChild("HumanoidRootPart",5);previousPosition=nil;end);local MoreSection=MainTab:CreateSection("Auto Buy");local Dropdown1=MainTab:CreateDropdown({Name="Primary",Options={"MP5A3","AK-47","HK416"},CurrentOption={""},MultipleOptions=false,Flag="Dropdown1",Callback=function(Option) print("Selected option:",Option);end});local Dropdown2=MainTab:CreateDropdown({Name="Secondary",Options={"Glock","M19111","Deagle","Uzi","MAC-11"},CurrentOption={""},MultipleOptions=false,Flag="Accessory",Callback=function(Option) print("Selected option:",Option);end});local Dropdown3=MainTab:CreateDropdown({Name="Secondary 2",Options={"HandCuffs","MegaPhone"},CurrentOption={""},MultipleOptions=false,Flag="Accessory2",Callback=function(Option) print("Selected option:",Option);end});local Button=MainTab:CreateButton({Name="Clear Selected",Callback=function() Dropdown1:Set("");Dropdown2:Set("");Dropdown3:Set("");print("All dropdown selections cleared!");end});local Toggle=MainTab:CreateToggle({Name="Auto Buy Weapons",CurrentValue=false,Flag="wea",Callback=function(Value) end});local Toggle=MainTab:CreateToggle({Name="Auto Buy Ammo",CurrentValue=false,Flag="AutoBuyAmmo",Callback=function(Value) AutoBuyEnabled=Value;print("[AutoBuyAmmo] Toggle:",Value);if Value then print("[AutoBuyAmmo] Starting monitoring...");spawn(function() monitorLoop();end);else print("[AutoBuyAmmo] Stopping monitoring...");end end});local EspSection=VisualsTab:CreateSection("Visuals");local playerHighlights={};local playerAddedConnection;local characterConnections={};local toolConnections={};local charactersWatcher;local function updateToolDisplay(character) if ( not playerHighlights[character] or  not playerHighlights[character].toolBillboard) then return;end pcall(function() local toolName="";local tool=character:FindFirstChildOfClass("Tool");if tool then toolName=tool.Name;end playerHighlights[character].toolBillboard.ToolText.Text=""   .. toolName ;end);end local function createToolBillboard(character) local humanoidRootPart=character:FindFirstChild("HumanoidRootPart");if  not humanoidRootPart then return nil;end local toolBillboard=Instance.new("BillboardGui");toolBillboard.Name="ToolEspBillboard";toolBillboard.Size=UDim2.new(0,250,0,30);toolBillboard.StudsOffset=Vector3.new(0, -3.5,0);toolBillboard.AlwaysOnTop=true;toolBillboard.Parent=humanoidRootPart;local toolText=Instance.new("TextLabel");toolText.Name="ToolText";toolText.Size=UDim2.new(1,0,1,0);toolText.BackgroundTransparency=1;toolText.Text="Holding: No Tool";toolText.TextColor3=Color3.fromRGB(255,255,0);toolText.TextStrokeTransparency=0;toolText.TextStrokeColor3=Color3.fromRGB(0,0,0);toolText.TextSize=12;toolText.Font=Enum.Font.GothamBold;toolText.Parent=toolBillboard;return toolBillboard;end local function setupToolMonitoring(character) if toolConnections[character] then for _,connection in pairs(toolConnections[character]) do connection:Disconnect();end end toolConnections[character]={};table.insert(toolConnections[character],character.ChildAdded:Connect(function(child) if child:IsA("Tool") then wait(0.1);updateToolDisplay(character);end end));table.insert(toolConnections[character],character.ChildRemoved:Connect(function(child) if child:IsA("Tool") then wait(0.1);updateToolDisplay(character);end end));updateToolDisplay(character);end local function createPlayerHighlight(playerCharacter) if ( not playerCharacter or playerHighlights[playerCharacter]) then return;end pcall(function() local highlight=Instance.new("Highlight");highlight.Name="PlayerEspHighlight";highlight.FillColor=Color3.fromRGB(255,0,0);highlight.OutlineColor=Color3.fromRGB(255,255,255);highlight.Parent=playerCharacter;local head=playerCharacter:FindFirstChild("Head");local nameBillboard=nil;if head then nameBillboard=Instance.new("BillboardGui");nameBillboard.Name="PlayerEspBillboard";nameBillboard.Size=UDim2.new(0,200,0,50);nameBillboard.StudsOffset=Vector3.new(0,3,0);nameBillboard.AlwaysOnTop=true;nameBillboard.Parent=head;local textLabel=Instance.new("TextLabel");textLabel.Name="PlayerEspText";textLabel.Size=UDim2.new(1,0,1,0);textLabel.BackgroundTransparency=1;textLabel.Text=playerCharacter.Name;textLabel.TextColor3=Color3.fromRGB(255,255,255);textLabel.TextStrokeTransparency=0;textLabel.TextSize=14;textLabel.Font=Enum.Font.GothamBold;textLabel.Parent=nameBillboard;end local toolBillboard=createToolBillboard(playerCharacter);playerHighlights[playerCharacter]={highlight=highlight,billboard=nameBillboard,toolBillboard=toolBillboard};setupToolMonitoring(playerCharacter);end);end local function removePlayerHighlight(playerCharacter) if playerHighlights[playerCharacter] then pcall(function() if playerHighlights[playerCharacter].highlight then playerHighlights[playerCharacter].highlight:Destroy();end if playerHighlights[playerCharacter].billboard then playerHighlights[playerCharacter].billboard:Destroy();end if playerHighlights[playerCharacter].toolBillboard then playerHighlights[playerCharacter].toolBillboard:Destroy();end end);if toolConnections[playerCharacter] then for _,connection in pairs(toolConnections[playerCharacter]) do connection:Disconnect();end toolConnections[playerCharacter]=nil;end playerHighlights[playerCharacter]=nil;end end local function setupPlayerESP(player) if (player==game.Players.LocalPlayer) then return;end if characterConnections[player] then characterConnections[player]:Disconnect();end characterConnections[player]=player.CharacterAdded:Connect(function(character) wait(0.1);createPlayerHighlight(character);end);if (player.Character and player.Character:FindFirstChild("Head")) then createPlayerHighlight(player.Character);end end local function handleWorkspaceCharacter(character) if  not character:IsA("Model") then return;end if (character==game.Players.LocalPlayer.Character) then return;end createPlayerHighlight(character);end local function setupWorkspaceCharactersWatcher() local charactersFolder=workspace:FindFirstChild("Characters");if  not charactersFolder then charactersWatcher=workspace.ChildAdded:Connect(function(child) if (child.Name=="Characters") then charactersWatcher:Disconnect();setupWorkspaceCharactersWatcher();end end);return;end for _,character in pairs(charactersFolder:GetChildren()) do handleWorkspaceCharacter(character);end charactersWatcher=charactersFolder.ChildAdded:Connect(function(character) wait(0.1);handleWorkspaceCharacter(character);end);charactersFolder.ChildRemoved:Connect(function(character) removePlayerHighlight(character);end);end local function cleanupPlayerESP(player) if characterConnections[player] then characterConnections[player]:Disconnect();characterConnections[player]=nil;end if player.Character then removePlayerHighlight(player.Character);end end local ESPToggle=VisualsTab:CreateToggle({Name="Player Esp",CurrentValue=false,Flag="ESPToggle",Callback=function(Value) if Value then playerAddedConnection=game.Players.PlayerAdded:Connect(setupPlayerESP);for _,player in pairs(game.Players:GetPlayers()) do setupPlayerESP(player);end setupWorkspaceCharactersWatcher();game.Players.PlayerRemoving:Connect(function(player) cleanupPlayerESP(player);end);else if playerAddedConnection then playerAddedConnection:Disconnect();playerAddedConnection=nil;end if charactersWatcher then charactersWatcher:Disconnect();charactersWatcher=nil;end for _,player in pairs(game.Players:GetPlayers()) do cleanupPlayerESP(player);end local charactersFolder=workspace:FindFirstChild("Characters");if charactersFolder then for _,character in pairs(charactersFolder:GetChildren()) do removePlayerHighlight(character);end end for player,connection in pairs(characterConnections) do connection:Disconnect();end characterConnections={};for character,connections in pairs(toolConnections) do for _,connection in pairs(connections) do connection:Disconnect();end end toolConnections={};for character,_ in pairs(playerHighlights) do removePlayerHighlight(character);end end end});local espFolder=workspace.Others.Tools;local espItems={};local espConnection;local function addESP(model) if  not model:IsA("Model") then return;end if espItems[model] then return;end local part=model:FindFirstChildWhichIsA("BasePart");if  not part then return;end local weaponName=model.Name;for _,child in ipairs(model:GetChildren()) do if (child:IsA("BasePart") or child:IsA("MeshPart")) then weaponName=child.Name;break;end end local highlight=Instance.new("Highlight");highlight.Adornee=model;highlight.FillTransparency=1;highlight.OutlineColor=Color3.new(1,1,0);highlight.Parent=model;local billboard=Instance.new("BillboardGui");billboard.Adornee=part;billboard.Size=UDim2.new(0,95,0,15);billboard.StudsOffset=Vector3.new(0,2,0);billboard.AlwaysOnTop=true;billboard.Parent=model;local label=Instance.new("TextLabel");label.Size=UDim2.new(1,0,1,0);label.BackgroundTransparency=1;label.Text=weaponName;label.TextColor3=Color3.new(1,1,1);label.TextStrokeTransparency=0.5;label.TextScaled=true;label.Font=Enum.Font.SourceSansBold;label.Parent=billboard;espItems[model]={highlight,billboard};model.AncestryChanged:Connect(function(_,parent) if ( not parent and espItems[model]) then for _,obj in ipairs(espItems[model]) do obj:Destroy();end espItems[model]=nil;end end);end local function clearESP() for model,objs in pairs(espItems) do for _,obj in ipairs(objs) do obj:Destroy();end end espItems={};end local WeaponESPToggle=VisualsTab:CreateToggle({Name="Weapon ESP",CurrentValue=false,Flag="WeaponESPToggle",Callback=function(Value) if Value then for _,model in ipairs(espFolder:GetChildren()) do addESP(model);end espConnection=espFolder.ChildAdded:Connect(addESP);else if espConnection then espConnection:Disconnect();end clearESP();end end});local atmFolder=workspace:WaitForChild("ATMs");local atmESPItems={};local atmChildConn=nil;local function getATMHealth(atm) local h=atm:GetAttribute("health");return ((typeof(h)=="number") and h) or 0 ;end local function destroyATMEntry(atm) local entry=atmESPItems[atm];if  not entry then return;end if entry.attrConn then pcall(function() entry.attrConn:Disconnect();end);end if entry.ancestryConn then pcall(function() entry.ancestryConn:Disconnect();end);end if entry.highlight then pcall(function() entry.highlight:Destroy();end);end atmESPItems[atm]=nil;end local function ensureHighlight(atm) local hl=Instance.new("Highlight");hl.Name="ATM_ESP_Highlight";hl.Adornee=atm;hl.DepthMode=Enum.HighlightDepthMode.AlwaysOnTop;hl.FillTransparency=1;hl.OutlineTransparency=0;hl.OutlineColor=Color3.fromRGB(255,0,0);return hl;end local function updateATMHighlight(atm,entry) local health=getATMHealth(atm);if entry.highlight then if (health==100) then entry.highlight.OutlineColor=Color3.fromRGB(0,255,0);else entry.highlight.OutlineColor=Color3.fromRGB(255,0,0);end end end local function addATMESP(atm) if atmESPItems[atm] then return;end if  not (atm:IsA("Model") or atm:IsA("BasePart")) then return;end local highlight=ensureHighlight(atm);highlight.Parent=atm;local entry={highlight=highlight};atmESPItems[atm]=entry;entry.attrConn=atm.AttributeChanged:Connect(function(attr) if (attr=="health") then updateATMHighlight(atm,entry);end end);entry.ancestryConn=atm.AncestryChanged:Connect(function(_,parent) if  not parent then destroyATMEntry(atm);end end);updateATMHighlight(atm,entry);end local function clearAllATMESP() if atmChildConn then pcall(function() atmChildConn:Disconnect();end);atmChildConn=nil;end for atm,_ in pairs(atmESPItems) do destroyATMEntry(atm);end atmESPItems={};end local ATMESPToggle=VisualsTab:CreateToggle({Name="ATM ESP",CurrentValue=false,Flag="ATMESPToggle",Callback=function(on) if on then for _,atm in ipairs(atmFolder:GetChildren()) do addATMESP(atm);end atmChildConn=atmFolder.ChildAdded:Connect(function(child) task.defer(addATMESP,child);end);else clearAllATMESP();end end});local FullbrightToggle=VisualsTab:CreateToggle({Name="No Shadows/ Light",CurrentValue=false,Flag="FullbrightToggle",Callback=function(Value) local Lighting=game:GetService("Lighting");if Value then getgenv().OriginalAmbient=Lighting.Ambient;getgenv().OriginalBrightness=Lighting.Brightness;getgenv().OriginalColorShift_Bottom=Lighting.ColorShift_Bottom;getgenv().OriginalColorShift_Top=Lighting.ColorShift_Top;getgenv().OriginalOutdoorAmbient=Lighting.OutdoorAmbient;getgenv().OriginalClockTime=Lighting.ClockTime;getgenv().OriginalFogEnd=Lighting.FogEnd;getgenv().OriginalGlobalShadows=Lighting.GlobalShadows;Lighting.Ambient=Color3.fromRGB(178,178,178);Lighting.Brightness=1;Lighting.ColorShift_Bottom=Color3.fromRGB(11,11,11);Lighting.ColorShift_Top=Color3.fromRGB(240,240,240);Lighting.OutdoorAmbient=Color3.fromRGB(34,34,34);Lighting.ClockTime=12;Lighting.FogEnd=786543;Lighting.GlobalShadows=false;else Lighting.Ambient=getgenv().OriginalAmbient or Color3.fromRGB(70,70,70) ;Lighting.Brightness=getgenv().OriginalBrightness or 1 ;Lighting.ColorShift_Bottom=getgenv().OriginalColorShift_Bottom or Color3.fromRGB(11,11,11) ;Lighting.ColorShift_Top=getgenv().OriginalColorShift_Top or Color3.fromRGB(240,240,240) ;Lighting.OutdoorAmbient=getgenv().OriginalOutdoorAmbient or Color3.fromRGB(70,70,70) ;Lighting.ClockTime=getgenv().OriginalClockTime or 14 ;Lighting.FogEnd=getgenv().OriginalFogEnd or 100000 ;Lighting.GlobalShadows=getgenv().OriginalGlobalShadows or true ;end end});local MONEY_PATH={"Spawned","Money"};local CHECK_INTERVAL=0.05;local AutoPickupEnabled=false;local HBConnection=nil;local MoneyFolder=nil;local LocalPlayer=Players.LocalPlayer;local function getMoneyFolder() local root=workspace;for _,name in ipairs(MONEY_PATH) do root=root:FindFirstChild(name);if  not root then return nil;end end return root;end local function firePrompt(prompt) if ( not prompt or  not prompt.Parent) then return;end if (typeof(fireproximityprompt)=="function") then pcall(function() local oldMAD=prompt.MaxActivationDistance;local oldHold=prompt.HoldDuration;local oldEnabled=prompt.Enabled;local oldReqLOS=prompt.RequiresLineOfSight;prompt.Enabled=true;prompt.MaxActivationDistance=math.huge;prompt.HoldDuration=0;prompt.RequiresLineOfSight=false;fireproximityprompt(prompt);task.wait(0.01);prompt.MaxActivationDistance=oldMAD;prompt.HoldDuration=oldHold;prompt.Enabled=oldEnabled;prompt.RequiresLineOfSight=oldReqLOS;end);return;end pcall(function() if (prompt.InputHoldBegin and prompt.InputHoldEnd) then prompt.RequiresLineOfSight=false;prompt.MaxActivationDistance=math.huge;prompt.HoldDuration=0;prompt.Enabled=true;prompt.InputHoldBegin();task.wait(0.02);prompt.InputHoldEnd();end end);end local function collectAllMoneyOnce() MoneyFolder=MoneyFolder or getMoneyFolder() ;if  not MoneyFolder then return;end for _,obj in ipairs(MoneyFolder:GetDescendants()) do if obj:IsA("ProximityPrompt") then firePrompt(obj);end end end local function startAutoPickup() if AutoPickupEnabled then return;end AutoPickupEnabled=true;HBConnection=RunService.Heartbeat:Connect(function(dt) if  not AutoPickupEnabled then return;end collectAllMoneyOnce();end);print("[AutoPickup] ON");end local function stopAutoPickup() if  not AutoPickupEnabled then return;end AutoPickupEnabled=false;if HBConnection then pcall(function() HBConnection:Disconnect();end);HBConnection=nil;end print("[AutoPickup] OFF");end local AutoPickupToggle=FarmTab:CreateToggle({Name="Auto Pickup Cash",CurrentValue=false,Flag="AutoPickup_E",Callback=function(val) local ok,err=pcall(function() if val then startAutoPickup();else stopAutoPickup();end end);if  not ok then warn("[AutoPickup] Toggle error:",err);stopAutoPickup();end end});local LocalPlayer=Players.LocalPlayer;local Camera=Workspace.CurrentCamera;local running=false;local originalCameraType=nil;local cameraConnection=nil;local TELEPORT_DISTANCE=2;local TELEPORT_HEIGHT=1;local PUNCH_INTERVAL=0.15;local TIMEOUT_PER_ATM=8;local NO_DAMAGE_ATTEMPTS=8;local RESPAWN_WAIT=1;local SKY_HEIGHT=500;local CAMERA_ANGLE= -85;local function setupSkyCamera() if Camera then originalCameraType=Camera.CameraType;Camera.CameraType=Enum.CameraType.Scriptable;local mapCenter=Vector3.new(0,SKY_HEIGHT,0);Camera.CFrame=CFrame.new(mapCenter) * CFrame.Angles(math.rad(CAMERA_ANGLE),0,0) ;print("Sky camera activated - Bird's eye view enabled");end end local function updateSkyCamera() if ( not running or  not Camera) then return;end local hrp=getCharacter();if hrp then local playerPos=hrp.Position;local skyPos=Vector3.new(playerPos.X,playerPos.Y + SKY_HEIGHT ,playerPos.Z);Camera.CFrame=CFrame.new(skyPos) * CFrame.Angles(math.rad(CAMERA_ANGLE),0,0) ;end end local function restoreCamera() if (Camera and originalCameraType) then Camera.CameraType=originalCameraType;print("Camera restored to original settings");end if cameraConnection then cameraConnection:Disconnect();cameraConnection=nil;end end local function getCharacter() local char=LocalPlayer.Character;if char then return char:FindFirstChild("HumanoidRootPart"),char;end return nil,nil;end local function getHumanoid(char) if  not char then return nil;end return char:FindFirstChildOfClass("Humanoid");end local function getATMHealth(atm) if  not atm then return nil;end local attr=atm:GetAttribute("health");if (attr~=nil) then return attr;end local h=atm:FindFirstChildOfClass("Humanoid");if h then return h.Health;end return nil;end local function isValidATM(atm) local h=getATMHealth(atm);return (type(h)=="number") and (h>=0) and (h<=100) ;end local function getTeleportCFrame(atm) if  not atm then return nil;end local primaryPart=atm.PrimaryPart or atm:FindFirstChildWhichIsA("BasePart") ;if primaryPart then local cf=primaryPart.CFrame;local pos=cf.Position + (cf.LookVector *  -TELEPORT_DISTANCE) + Vector3.new(0,TELEPORT_HEIGHT,0) ;return CFrame.new(pos,cf.Position);end end local function equipFists() local backpack=LocalPlayer:FindFirstChild("Backpack");if  not backpack then return nil;end local fists=backpack:FindFirstChild("Fist") or backpack:FindFirstChild("Fists") ;if fists then local char=LocalPlayer.Character;if char then fists.Parent=char;return fists;end end return LocalPlayer.Character and (LocalPlayer.Character:FindFirstChild("Fist") or LocalPlayer.Character:FindFirstChild("Fists")) ;end local function punch(fists) if (fists and fists:IsA("Tool")) then pcall(function() fists:Activate();end);end end local function waitForCharacter() local hrp,char=getCharacter();while running and  not hrp  do hrp,char=getCharacter();task.wait(RESPAWN_WAIT);end return hrp,char;end local function farmATMs() local visited={};while running do local hrp,char=getCharacter();if  not hrp then hrp,char=waitForCharacter();if  not hrp then task.wait(1);continue;end end local humanoid=getHumanoid(char);local atmFolder=Workspace:FindFirstChild("ATMs");local candidates=(atmFolder and atmFolder:GetChildren()) or Workspace:GetChildren() ;local validATMs={};for _,obj in ipairs(candidates) do if (obj and obj:IsA("Model") and isValidATM(obj)) then table.insert(validATMs,{model=obj,health=getATMHealth(obj)});end end if ( #validATMs>0) then table.sort(validATMs,function(a,b) return a.health<b.health ;end);local target=validATMs[1].model;local targetName=target:GetFullName();local teleportCF=getTeleportCFrame(target);if (teleportCF and hrp) then hrp.CFrame=teleportCF;print("Teleported to ATM:",target.Name);end local fists=equipFists();local lastHealth=getATMHealth(target);local attemptsSinceChange=0;local lastChangeTime=tick();while running and isValidATM(target)  do if ( not char or  not char.Parent) then break;end punch(fists);attemptsSinceChange=attemptsSinceChange + 1 ;local currentHealth=getATMHealth(target);if (currentHealth~=lastHealth) then lastHealth=currentHealth;attemptsSinceChange=0;lastChangeTime=tick();elseif ((attemptsSinceChange>=NO_DAMAGE_ATTEMPTS) or ((tick() -lastChangeTime)>=TIMEOUT_PER_ATM)) then print("No damage or timeout, moving on from ATM:",target.Name);break;end task.wait(PUNCH_INTERVAL);end else print("No valid ATMs found...");task.wait(2);end task.wait(0.05);end end local AutoTeleportATMsRegularToggle=FarmTab:CreateToggle({Name="Auto Farm ATMs",CurrentValue=false,Flag="AutoTeleportATMsRegularToggle",Callback=function(Value) running=Value;if running then print("ATM Farm Started with Regular Camera View!");task.spawn(farmATMs);else print("ATM Farm Stopped!");end end});local AutoTeleportATMsSkyToggle=FarmTab:CreateToggle({Name="Auto Farm ATMs  (Picks Up More money!)",CurrentValue=false,Flag="AutoTeleportATMsSkyToggle",Callback=function(Value) running=Value;if running then print("ATM Farm Started with Sky Camera View!");setupSkyCamera();cameraConnection=RunService.Heartbeat:Connect(updateSkyCamera);task.spawn(farmATMs);else print("ATM Farm Stopped!");restoreCamera();end end});local Players=game:GetService("Players");local RunService=game:GetService("RunService");local LocalPlayer=Players.LocalPlayer;local selectedName=nil;local followingEnabled=false;local followConnection=nil;local FOLLOW_DISTANCE=4;local CLOSE_DISTANCE=1;local STOP_THRESHOLD=1;local WALK_SPEED=25;local lastPlayerPosition=nil;local playerStoppedTime=0;local function GetPlayerNames() local names={};for _,p in ipairs(Players:GetPlayers()) do if (p~=LocalPlayer) then table.insert(names,p.Name);end end table.sort(names);return names;end local function getRootPart(character) return character:FindFirstChild("HumanoidRootPart") or character:FindFirstChild("Torso") or character:FindFirstChild("UpperTorso") ;end local function getHumanoid(character) return character:FindFirstChildOfClass("Humanoid");end local function teleportToSelected() if ( not selectedName or (selectedName=="")) then warn("[TP] No player selected.");return;end local targetPlayer=Players:FindFirstChild(selectedName);if  not targetPlayer then warn(("[TP] Player '%s' not found."):format(selectedName));return;end local targetChar=targetPlayer.Character;local myChar=LocalPlayer.Character;if ( not targetChar or  not myChar) then warn("[TP] One of the characters is not loaded.");return;end local targetRoot=getRootPart(targetChar);local myRoot=getRootPart(myChar);if ( not targetRoot or  not myRoot) then warn("[TP] Missing root part(s).");return;end local behindOffset= -targetRoot.CFrame.LookVector * FOLLOW_DISTANCE ;myRoot.CFrame=targetRoot.CFrame + behindOffset + Vector3.new(0,1,0) ;end local function stopAll() if followConnection then followConnection:Disconnect();followConnection=nil;end followingEnabled=false;lastPlayerPosition=nil;playerStoppedTime=0;print("[Systems] All systems stopped");end local function stopFollowing() if followConnection then followConnection:Disconnect();followConnection=nil;end followingEnabled=false;lastPlayerPosition=nil;playerStoppedTime=0;print("[Follow] Stopped following");end local function startFollowing() if followConnection then followConnection:Disconnect();end followingEnabled=true;print("[Follow] Started following",selectedName or "selected player" );followConnection=RunService.Heartbeat:Connect(function(dt) if ( not selectedName or (selectedName=="")) then return;end local targetPlayer=Players:FindFirstChild(selectedName);if  not targetPlayer then return;end local targetChar=targetPlayer.Character;local myChar=LocalPlayer.Character;if ( not targetChar or  not myChar) then return;end local targetRoot=getRootPart(targetChar);local myRoot=getRootPart(myChar);local myHumanoid=getHumanoid(myChar);if ( not targetRoot or  not myRoot or  not myHumanoid) then return;end local targetPosition=targetRoot.Position;local myPosition=myRoot.Position;local playerMoved=false;if lastPlayerPosition then local movementDistance=(targetPosition-lastPlayerPosition).Magnitude;if (movementDistance>0.5) then playerMoved=true;playerStoppedTime=0;else playerStoppedTime=playerStoppedTime + dt ;end end lastPlayerPosition=targetPosition;local behindOffset= -targetRoot.CFrame.LookVector * FOLLOW_DISTANCE ;local desiredPosition=targetPosition + behindOffset ;local finalDistance=FOLLOW_DISTANCE;if (playerStoppedTime>STOP_THRESHOLD) then finalDistance=CLOSE_DISTANCE;behindOffset= -targetRoot.CFrame.LookVector * CLOSE_DISTANCE ;desiredPosition=targetPosition + behindOffset ;end local currentDistance=(Vector3.new(myPosition.X,0,myPosition.Z) -Vector3.new(desiredPosition.X,0,desiredPosition.Z)).Magnitude;if (currentDistance>(finalDistance * 0.8)) then myHumanoid.WalkSpeed=WALK_SPEED;myHumanoid:MoveTo(desiredPosition);else myHumanoid:MoveTo(myPosition);end end);end local function onCharacterAdded(character) task.wait(1);if (followingEnabled and selectedName) then teleportToSelected();task.wait(0.5);startFollowing();end end LocalPlayer.CharacterAdded:Connect(onCharacterAdded);local Dropdown=MiscTab:CreateDropdown({Name="Select Player",Options=GetPlayerNames(),CurrentOption={""},MultipleOptions=false,Flag="TeleportDropdown",Callback=function(option) if (typeof(option)=="table") then selectedName=option[1];else selectedName=option;end print("[TP] Selected:",selectedName or "nil" );if (followingEnabled and selectedName) then startFollowing();end end});local function refreshOptions() local opts=GetPlayerNames();Dropdown:SetOptions(opts);if (selectedName and  not table.find(opts,selectedName)) then selectedName=nil;print("[TP] Previously selected player left. Selection cleared.");stopAll();end end Players.PlayerAdded:Connect(refreshOptions);Players.PlayerRemoving:Connect(refreshOptions);local TpButton=MiscTab:CreateButton({Name="Teleport to Player",Callback=function() teleportToSelected();end});local FollowToggle=MiscTab:CreateToggle({Name="Follow Player",CurrentValue=false,Flag="FollowToggle",Callback=function(Value) if Value then if ( not selectedName or (selectedName=="")) then warn("[Follow] Please select a player first!");return;end teleportToSelected();task.wait(0.5);startFollowing();else stopFollowing();end print("Follow toggle changed to:",Value);end});local AntiSection=MiscTab:CreateSection("+");local ReplicatedStorage=game:GetService("ReplicatedStorage");local Players=game:GetService("Players");local antiFlingEnabled=false;if  not ReplicatedStorage:FindFirstChild("juisdfj0i32i0eidsuf0iok") then local detection=Instance.new("Decal");detection.Name="juisdfj0i32i0eidsuf0iok";detection.Parent=ReplicatedStorage;end local AntiFlingToggle=MiscTab:CreateToggle({Name="Anti Fling",CurrentValue=false,Flag="awdawfafaawwf2",Callback=function(Value) antiFlingEnabled=Value;local lp=Players.LocalPlayer;local c=lp.Character;local hrp=c and c:FindFirstChild("HumanoidRootPart") ;if hrp then if antiFlingEnabled then hrp.Anchored=true;wait(0.1);hrp.Anchored=false;end end end});local ReplicatedStorage=game:GetService("ReplicatedStorage");local RunService=game:GetService("RunService");local Players=game:GetService("Players");local hiddenfling=false;if  not ReplicatedStorage:FindFirstChild("juisdfj0i32i0eidsuf0iok") then local detection=Instance.new("Decal");detection.Name="juisdfj0i32i0eidsuf0iok";detection.Parent=ReplicatedStorage;end local function fling() local hrp,c,vel,movel=nil,nil,nil,0.1;local lp=Players.LocalPlayer;while true do RunService.Heartbeat:Wait();if hiddenfling then while hiddenfling and  not (c and c.Parent and hrp and hrp.Parent)  do RunService.Heartbeat:Wait();c=lp.Character;hrp=c and c:FindFirstChild("HumanoidRootPart") ;end if hiddenfling then vel=hrp.Velocity;hrp.Velocity=(vel * 1000000) + Vector3.new(0,1000000,0) ;RunService.RenderStepped:Wait();if (c and c.Parent and hrp and hrp.Parent) then hrp.Velocity=vel;end RunService.Stepped:Wait();if (c and c.Parent and hrp and hrp.Parent) then hrp.Velocity=vel + Vector3.new(0,movel,0) ;movel=movel *  -1 ;end end end end end local AntiKickToggle=MiscTab:CreateToggle({Name="Anti Kick",CurrentValue=false,Flag="AntiKickToggle",Callback=function(Value) if Value then local VirtualUser=game:GetService("VirtualUser");local Players=game:GetService("Players");local RunService=game:GetService("RunService");local UserInputService=game:GetService("UserInputService");local TweenService=game:GetService("TweenService");local ReplicatedStorage=game:GetService("ReplicatedStorage");if _G.AntiKickConnections then for _,connection in pairs(_G.AntiKickConnections) do if (connection and connection.Connected) then connection:Disconnect();end end end _G.AntiKickConnections={};local player=Players.LocalPlayer;print("🛡️ Enhanced Anti-Kick System Activated");_G.AntiKickConnections[ #_G.AntiKickConnections + 1 ]=player.Idled:Connect(function() pcall(function() VirtualUser:CaptureController();VirtualUser:ClickButton2(Vector2.new());VirtualUser:Button2Down(Vector2.new(0,0));VirtualUser:Button2Up(Vector2.new(0,0));end);print("🔄 Anti-Kick: Idled event handled");end);local lastActivity=tick();_G.AntiKickConnections[ #_G.AntiKickConnections + 1 ]=RunService.Heartbeat:Connect(function() if ((tick() -lastActivity)>=15) then pcall(function() VirtualUser:CaptureController();VirtualUser:ClickButton2(Vector2.new());local randomX=math.random( -5,5);local randomY=math.random( -5,5);VirtualUser:MoveMouse(Vector2.new(randomX,randomY));VirtualUser:TypeText("");lastActivity=tick();end);end end);local movementToggle=false;_G.AntiKickConnections[ #_G.AntiKickConnections + 1 ]=RunService.Heartbeat:Connect(function() pcall(function() if (player.Character and player.Character:FindFirstChild("Humanoid")) then local humanoid=player.Character.Humanoid;if ((tick()%45)<0.1) then movementToggle= not movementToggle;if movementToggle then humanoid:Move(Vector3.new(0.1,0,0),false);wait(0.1);humanoid:Move(Vector3.new( -0.1,0,0),false);end end end end);end);_G.AntiKickConnections[ #_G.AntiKickConnections + 1 ]=RunService.Heartbeat:Connect(function() if ((tick()%30)<0.1) then pcall(function() for _,remote in pairs(ReplicatedStorage:GetDescendants()) do if (remote:IsA("RemoteEvent") and (string.find(string.lower(remote.Name),"activity") or string.find(string.lower(remote.Name),"heartbeat") or string.find(string.lower(remote.Name),"ping"))) then remote:FireServer();end end end);end end);_G.AntiKickConnections[ #_G.AntiKickConnections + 1 ]=RunService.RenderStepped:Connect(function() if ((tick()%60)<0.1) then pcall(function() if workspace.CurrentCamera then local currentCFrame=workspace.CurrentCamera.CFrame;local newCFrame=currentCFrame * CFrame.Angles(0,math.rad(0.1),0) ;workspace.CurrentCamera.CFrame=newCFrame;wait(0.05);workspace.CurrentCamera.CFrame=currentCFrame;end end);end end);_G.AntiKickConnections[ #_G.AntiKickConnections + 1 ]=RunService.Heartbeat:Connect(function() if ((tick()%40)<0.1) then pcall(function() local gui=player:FindFirstChild("PlayerGui");if gui then VirtualUser:CaptureController();VirtualUser:SetKeyDown("0x01");wait(0.01);VirtualUser:SetKeyUp("0x01");end end);end end);local activityCounter=0;_G.AntiKickConnections[ #_G.AntiKickConnections + 1 ]=RunService.Heartbeat:Connect(function() activityCounter=activityCounter + 1 ;if (activityCounter>=1800) then activityCounter=0;pcall(function() game:GetService("Stats"):GetTotalMemoryUsageMb();if game:GetService("CoreGui") then game:GetService("CoreGui").Name=game:GetService("CoreGui").Name;end end);end end);_G.AntiKickConnections[ #_G.AntiKickConnections + 1 ]=RunService.Stepped:Connect(function() if ((tick()%20)<RunService.Heartbeat:Wait()) then pcall(function() VirtualUser:Button1Down(Vector2.new(1,1));VirtualUser:Button1Up(Vector2.new(1,1));end);end end);spawn(function() while _G.AntiKickConnections and ( #_G.AntiKickConnections>0)  do print("💚 Anti-Kick Active - "   ..  #_G.AntiKickConnections   .. " protection methods running" );wait(120);end end);elseif _G.AntiKickConnections then local disconnected=0;for _,connection in pairs(_G.AntiKickConnections) do if (connection and connection.Connected) then connection:Disconnect();disconnected=disconnected + 1 ;end end _G.AntiKickConnections=nil;print("🔴 Anti-Kick Disabled - "   .. disconnected   .. " connections stopped" );end end});local AntiFlingToggle=MiscTab:CreateToggle({Name="Fling Player",CurrentValue=false,Flag="awdawfafawf2",Callback=function(Value) hiddenfling=Value;end});spawn(fling);MiscTab:CreateSection("Public Scripts");local infyelsButton=MiscTab:CreateButton({Name="Infinite Yield",Callback=function() loadstring(game:HttpGet("https://obj.wearedevs.net/2/scripts/Infinite%20Yield.lua"))();end});local aimbotButton=MiscTab:CreateButton({Name="Mobile Aimbot",Callback=function() loadstring(game:HttpGet("https://raw.githubusercontent.com/DanielHubll/DanielHubll/refs/heads/main/Aimbot%20Mobile"))();end});local AntiSection=MiscTab:CreateSection("Join Servers");local HttpService=game:GetService("HttpService");local TeleportService=game:GetService("TeleportService");local Players=game:GetService("Players");local LocalPlayer=Players.LocalPlayer;local PLACE_ID=18901887211;local MAX_PAGES=10;local function fetchServerPage(cursor) local url="https://games.roblox.com/v1/games/"   .. tostring(PLACE_ID)   .. "/servers/Public?sortOrder=Asc&limit=100" ;if (cursor and (cursor~="")) then url=url   .. "&cursor="   .. HttpService:UrlEncode(cursor) ;end local ok,res=pcall(function() return game:HttpGet(url);end);if ( not ok or  not res) then return nil,nil;end local success,data=pcall(function() return HttpService:JSONDecode(res);end);if ( not success or  not data) then return nil,nil;end return data,data.nextPageCursor;end local function collectEligibleServers() local cursor="";local collected={};for i=1,MAX_PAGES do local data,nextCursor=fetchServerPage(cursor);if ( not data or  not data.data) then break;end for _,server in ipairs(data.data) do if ((server.playing<server.maxPlayers) and (tostring(server.id)~=tostring(game.JobId))) then table.insert(collected,server);end end if ( not nextCursor or (nextCursor=="")) then break;end cursor=nextCursor;end return collected;end local function getRandomServer() local servers=collectEligibleServers();if ( #servers==0) then return nil;end math.randomseed(tick() + os.time() );local pick=servers[math.random(1, #servers)];return (pick and tostring(pick.id)) or nil ;end local function getMostPoppedServer() local servers=collectEligibleServers();if ( #servers==0) then return nil;end local best=nil;for _,s in ipairs(servers) do if ( not best or (s.playing>best.playing)) then best=s;end end return (best and tostring(best.id)) or nil ;end local function getLeastPoppedServer() local servers=collectEligibleServers();if ( #servers==0) then return nil;end local best=nil;for _,s in ipairs(servers) do if ( not best or (s.playing<best.playing)) then best=s;end end return (best and tostring(best.id)) or nil ;end MiscTab:CreateButton({Name="Join Current Server",Callback=function() print("[ServerHopper] Rejoining current server by teleporting to PlaceId.");local placeId=game.PlaceId;local ok,err=pcall(function() TeleportService:Teleport(placeId,LocalPlayer);end);if  not ok then warn("[ServerHopper] Rejoin teleport failed:",tostring(err));end end});MiscTab:CreateButton({Name="Join Random Server",Callback=function() print("[ServerHopper] Looking for random popped server...");local serverId=getRandomServer();if serverId then print("[ServerHopper] Teleporting to server:",serverId);local ok,err=pcall(function() TeleportService:TeleportToPlaceInstance(PLACE_ID,serverId,LocalPlayer);end);if  not ok then warn("[ServerHopper] Teleport failed:",tostring(err));end else warn("[ServerHopper] Could not find a suitable random server.");end end});MiscTab:CreateButton({Name="Join Least Popped Server",Callback=function() print("[ServerHopper] Looking for least-populated server...");local serverId=getLeastPoppedServer();if serverId then print("[ServerHopper] Teleporting to server:",serverId);local ok,err=pcall(function() TeleportService:TeleportToPlaceInstance(PLACE_ID,serverId,LocalPlayer);end);if  not ok then warn("[ServerHopper] Teleport failed:",tostring(err));end else warn("[ServerHopper] Could not find a suitable least-populated server.");end end});MiscTab:CreateButton({Name="Join Most Popped Server",Callback=function() print("[ServerHopper] Looking for most-populated server...");local serverId=getMostPoppedServer();if serverId then print("[ServerHopper] Teleporting to server:",serverId);local ok,err=pcall(function() TeleportService:TeleportToPlaceInstance(PLACE_ID,serverId,LocalPlayer);end);if  not ok then warn("[ServerHopper] Teleport failed:",tostring(err));end else warn("[ServerHopper] Could not find a suitable most-populated server.");end end});local AntiSection=MiscTab:CreateSection("Credits");local jds=MiscTab:CreateButton({Name="Copy Discord Server",Callback=function() setclipboard("https://discord.gg/Q6hXrGZd2M");end});Rayfield:LoadConfiguration(); end